= Wysiwyg

Simple WYSIWYG plugin with image upload support.
Based on LWRTE[http://code.google.com/p/lwrte/] 
and ocupload[http://code.google.com/p/ocupload/].

== Dependencies

Javascript:
- jQuery

Rails plugins
- paperclip
- responds_to_parent


= Installation

Install the plugin:

  script/plugin install git://github.com/agilitic/wysiwyg.git

Run the generator:
  script/generate w_picture

The generator will create 
- a controller: wysiwyg_pictures_controller
- a wysiwyg_picture route
- a model: wysiwyg_pictures
- a migration file
- a wysiwyg directory in the public/ folder

= Usage

Tweak the wysiwyg_picture model to suit your need (e.g., paperclip params).

Include the JS and CSS into your views:

  <%= stylesheet_link_tag '/wysiwyg/wysiwyg' %>
  <%= javascript_include_tag '/wysiwyg/wysiwyg' %>

To transform a textarea into a WYSIWYG:

  $(document).ready(function(){
	
	wysiwygSetup({
		textarea_id:'content_nl_editor',
		picture_action_url:'/wysiwyg_pictures',
		width:620
	});
	
	wysiwygSetup({
		textarea_id:'content_fr_editor',
		light_editor:true
		width:620
	});
  });

Options:
* textarea_id: the DOM id of the textarea to decorate.
* light_editor: display a wysiwyg with minimal user control (bold,underline,...)
* picture_action_url: pictures uploaded by the user will be sent at this path. If you use the generated controller, use /wysiwyg_pictures
* width: the width of the editor (default: 600px).

= Notes

- By default, the uploaded pictures are stored in /public/system/wysiwyg_pictures/.

Copyright (c) 2009 Aurélien Malisart & François Stéphany, agilitic, released under the MIT license
